name: ci
on:
  pull_request:
    paths-ignore:
      - terraform/**
  push:
    branches:
      - main
    paths-ignore:
      - terraform/**
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: django
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      minio:
        # This image does not require any command arguments (which GitHub Actions don't support)
        image: bitnamilegacy/minio:latest
        env:
          MINIO_ROOT_USER: minioAccessKey
          MINIO_ROOT_PASSWORD: minioSecretKey
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install tox
        run: |
          pip install --upgrade pip
          pip install tox
      - name: Build node static assets
        run: |
          npm install
          npm run build
      - name: Run tests
        run: |
          tox
        env:
          DJANGO_CELERY_BROKER_URL: redis://localhost:6379/0
          DJANGO_DATABASE_URL: postgres://postgres:postgres@localhost:5432/django
          DJANGO_MINIO_STORAGE_ENDPOINT: localhost:9000
          DJANGO_MINIO_STORAGE_ACCESS_KEY: minioAccessKey
          DJANGO_MINIO_STORAGE_SECRET_KEY: minioSecretKey
          REDIS_URL: redis://localhost:6379/0

  build-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install packages
        run: |
          npm install
      - name: Run build
        run: |
          npm run build
